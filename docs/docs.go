// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "gusrylmubarok",
            "email": "gusrylmubarok@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/comment": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create and store a comment with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Add a comment",
                "parameters": [
                    {
                        "description": "Add Comment",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AddComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AddedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/comment/by-photo/{photoId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all comments by photo with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get all by photo comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GetAllComments"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/comment/by-user/{photoId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all comments with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get all comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GetAllComments"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/comment/{commentId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all comments by photo with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get all by photo comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GetAComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a comment by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Comment",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a comment by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commnetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeletedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/photo": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all photos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "Get all photos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GetAllPhotos"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create and store a photo with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "Store a photo",
                "parameters": [
                    {
                        "description": "Add Photo",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AddPhoto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AddedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/photo/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get one photo with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "Get one photo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GetByIdPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a photo by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "Update a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Photo",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatePhoto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a photo by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "Delete a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeletedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/socialmedia/by-user/{userId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all social media with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Fetch all social media",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GetDataSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/socialmedia/{socialMediaId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all social media with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Fetch all social media",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ResponseDataFetchedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/socialmedias": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create and store a social media with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Add a social media",
                "parameters": [
                    {
                        "description": "Add Social Media",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AddSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AddedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/socialmedias/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a social media by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Update a social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SocialMedia ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Social Media",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a social media by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Delete a social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SocialMedia ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeletedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Authentication a user and retrieve a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.LoggedInUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "create and store a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register a user",
                "parameters": [
                    {
                        "description": "Register User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.RegisteredUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/user/{userId}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a user with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "Update User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete own user with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete own user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.DeletedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AddComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo_id": {
                    "type": "string",
                    "example": "photo-123"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "domain.AddPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "A caption"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo Title"
                }
            }
        },
        "domain.AddSocialMedia": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                }
            }
        },
        "domain.AddedComment": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.AddedDataComment"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.AddedDataComment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "the created at generated here"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated comment id"
                },
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo": {
                    "$ref": "#/definitions/domain.GetPhoto"
                },
                "user": {
                    "$ref": "#/definitions/domain.GetUser"
                }
            }
        },
        "domain.AddedDataPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "A caption"
                },
                "created_at": {
                    "type": "string",
                    "example": "create time should be here"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo Title"
                },
                "user": {
                    "$ref": "#/definitions/domain.GetUser"
                }
            }
        },
        "domain.AddedDataSocialMedia": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "the created at generated here"
                },
                "id": {
                    "type": "string",
                    "example": "the social media id generated here"
                },
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "domain.AddedPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.AddedDataPhoto"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.AddedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.AddedDataSocialMedia"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.Comment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo": {
                    "$ref": "#/definitions/domain.Photo"
                },
                "photo_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/domain.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.DeletedComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your comment has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.DeletedPhoto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your account has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.DeletedSocialMedia": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your social media has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.DeletedUser": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your account has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.GetAComment": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Comment"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.GetAllComments": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Comment"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.GetAllPhotos": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.GetDetailPhoto"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.GetByIdPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.GetDetailPhoto"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.GetDataSocialMedia": {
            "type": "object",
            "properties": {
                "social_medias": {}
            }
        },
        "domain.GetDetailPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/domain.GetUser"
                }
            }
        },
        "domain.GetPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domain.GetUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "newjohndoe@example.com"
                },
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "newjohndoe"
                }
            }
        },
        "domain.LoggedInUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Token"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.LoginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "domain.Photo": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo Title"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.RegisterUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "domain.RegisteredUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.GetUser"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.ResponseDataFetchedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.SocialMedias"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.SocialMedia": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Social Media"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/social-media"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/domain.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.SocialMedias": {
            "type": "object",
            "properties": {
                "social_medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.SocialMedia"
                    }
                }
            }
        },
        "domain.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "the token generated here"
                }
            }
        },
        "domain.UpdateComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A new comment"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "domain.UpdatePhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "A new caption"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/new-image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A new title"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "domain.UpdateSocialMedia": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "New Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.newexample.com/johndoe"
                }
            }
        },
        "domain.UpdateUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "newjohndoe@example.com"
                },
                "username": {
                    "type": "string",
                    "example": "newjohndoe"
                }
            }
        },
        "domain.UpdatedComment": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.UpdatedDataComment"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.UpdatedDataComment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo": {
                    "$ref": "#/definitions/domain.GetPhoto"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/domain.GetUser"
                }
            }
        },
        "domain.UpdatedDataPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/domain.GetUser"
                }
            }
        },
        "domain.UpdatedDataSocialMedia": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "here is the generated social media id"
                },
                "name": {
                    "type": "string",
                    "example": "New Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.newexample.com/johndoe"
                },
                "updated_at": {
                    "type": "string",
                    "example": "the updated at generated here"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "domain.UpdatedDataUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "newjohndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated user id"
                },
                "updated_at": {
                    "type": "string",
                    "example": "update time should be here"
                },
                "username": {
                    "type": "string",
                    "example": "newjohndoe"
                }
            }
        },
        "domain.UpdatedPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.UpdatedDataPhoto"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.UpdatedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.UpdatedDataSocialMedia"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.UpdatedUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.UpdatedDataUser"
                },
                "message": {
                    "type": "string",
                    "example": "message you if the process has been successful"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "helpers.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "mygram backend",
	Description:      "mygram is a free photo sharing app written in Go. People can share, view, and comment photos by everyone. Anyone can create an account by registering an email address and creating a username.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
